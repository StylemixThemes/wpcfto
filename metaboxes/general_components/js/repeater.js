(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

Vue.component('wpcfto_repeater', {
  props: ['fields', 'field_label', 'field_name', 'field_id', 'field_value'],
  data: function data() {
    return {
      repeater: [],
      repeater_values: {}
    };
  },
  template: "\n    <div class=\"wpcfto_generic_field wpcfto_generic_field_repeater wpcfto-repeater unflex_fields\">\n\n        <wpcfto_fields_aside_before :fields=\"fields\" :field_label=\"field_label\"></wpcfto_fields_aside_before>\n\n        <div v-for=\"(area, area_key) in repeater\" class=\"wpcfto-repeater-single\" :class=\"'wpcfto-repeater_' + field_name + '_' + area_key \">\n\n            <!--<span class=\"wpcfto-repeater-single-key\" :data-number=\"area_key + 1\" @click=\"toggleArea(area)\" :data-tab=\"field_label + ' (' + (area_key + 1) + ')'\"></span>-->\n\n            <!--:class=\"{'closed' : !area.closed_tab}\"-->\n\n            <div class=\"wpcfto_group_title\" v-html=\"field_label + ' #' + (area_key + 1)\"></div>\n\n            <div class=\"repeater_inner\">\n\n                <div class=\"wpcfto-repeater-field\" v-for=\"(field, field_name_inner) in fields.fields\">\n\n                    <component :is=\"'wpcfto_' + field.type\"\n                               :fields=\"field\"\n                               :field_name=\"field_name + '_' + area_key + '_' + field_name_inner\"\n                               :field_label=\"field.label\"\n                               :field_value=\"getFieldValue(area_key, field, field_name_inner)\"\n                               :field_data=\"field\"\n                               :field_native_name=\"field_name\"\n                               :field_native_name_inner=\"field_name_inner\"\n                               @wpcfto-get-value=\"$set(repeater[area_key], field_name_inner, $event)\">\n                    </component>\n\n                </div>\n\n            </div>\n\n            <span class=\"wpcfto-repeater-single-delete\" @click=\"removeArea(area_key)\">\n                <i class=\"fa fa-trash-alt\"></i>Delete\n            </span>\n\n        </div>\n\n        <div v-if=\"repeater && repeater.length > 0\" class=\"separator\"></div>\n\n        <div class=\"addArea\" @click=\"addArea\">\n            <i class=\"fa fa-plus-circle\"></i>\n            <span v-html=\"field_label + ' Item'\"></span>\n        </div>\n\n    </div>\n    ",
  mounted: function mounted() {
    var _this = this;

    if (typeof _this.field_value === 'string' && WpcftoIsJsonString(_this.field_value)) {
      _this.field_value = JSON.parse(_this.field_value);
    }

    if (typeof _this.field_value !== 'undefined' && typeof _this.field_value !== 'string') {
      _this.$set(_this, 'repeater_values', _this.field_value);

      _this.repeater_values.forEach(function () {
        _this.repeater.push({});
      });
    }
  },
  methods: {
    addArea: function addArea() {
      this.repeater.push({
        closed_tab: true
      });
      var el = 'wpcfto-repeater_' + this.field_name + '_' + (this.repeater.length - 1);
      Vue.nextTick(function () {
        if (typeof jQuery !== 'undefined') {
          var $ = jQuery;
          $([document.documentElement, document.body]).animate({
            scrollTop: $("." + el).offset().top - 40
          }, 400);
        }
      });
    },
    toggleArea: function toggleArea(area) {
      var currentState = typeof area['closed_tab'] !== 'undefined' ? area['closed_tab'] : false;
      this.$set(area, 'closed_tab', !currentState);
    },
    removeArea: function removeArea(areaIndex) {
      if (confirm('Do your really want to delete this field?')) {
        this.repeater.splice(areaIndex, 1);
      }
    },
    getFieldValue: function getFieldValue(key, field, field_name) {
      if (typeof this.repeater_values === 'undefined') return field.value;
      if (typeof this.repeater_values[key] === 'undefined') return field.value;
      if (typeof this.repeater_values[key][field_name] === 'undefined') return field.value;
      return this.repeater_values[key][field_name];
    }
  },
  watch: {
    repeater: {
      deep: true,
      handler: function handler(repeater) {
        this.$emit('wpcfto-get-value', repeater);
      }
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
},{}]},{},[1])